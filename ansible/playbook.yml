---
- hosts: graffitiscraperhost
  become: true
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install required packages
      apt:
        name: ['ca-certificates', 'curl', 'gnupg', 'jq']
        state: present

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: 'deb [arch={{ dpkg_architecture }}] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable'
        state: present

    - name: Install Docker
      apt:
        name: ['docker-ce', 'docker-ce-cli', 'containerd.io']
        state: present

    - name: Run hello-world Docker container
      docker_container:
        name: hello-world
        image: hello-world
        state: started

    - name: Add user to Docker group
      user:
        name: "{{ ansible_user_id }}"
        groups: docker
        append: yes

    - name: Clone repository
      git:
        repo: "{{ hostvars[inventory_hostname]['source_repo'] }}"
        dest: "{{ hostvars[inventory_hostname]['env_path'] }}"
        clone: yes

    - name: Install Docker Compose
      apt:
        name: docker-compose
        state: present

    - name: Create .env file
      file:
        path: "{{ hostvars[inventory_hostname]['env_path'] }}/.env"
        state: touch

    - name: Start Docker Compose
      docker_compose:
        project_src: "{{ hostvars[inventory_hostname]['env_path'] }}"
        state: started

    - name: Add cronjob entry for epoch sync
      cron:
        name: "Sync every 6 minutes"
        minute: "*/6"
        job: "curl -s http://localhost:3000/sync >> {{ hostvars[inventory_hostname]['env_path'] }}/scraper.log && echo >> {{ hostvars[inventory_hostname]['env_path'] }}/scraper.log 2>&1"
        user: "ubuntu"

    - name: Add cronjob entry for db dump and export
      cron:
        name: "Export data every day"
        minute: "0"
        hour: "0"
        job: "{{ hostvars[inventory_hostname]['env_path'] }}/export.sh"
        user: "ubuntu"
